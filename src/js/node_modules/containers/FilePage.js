import React, { PropTypes } from 'react';
import Relay from 'react-relay';
import FileOIcon from 'react-icons/lib/fa/file-o';
import ShoppingCartIcon from 'react-icons/lib/fa/shopping-cart';
import SearchIcon from 'react-icons/lib/fa/search';
import { createContainer } from 'recompose-relay';
import { compose, withState, pure, flattenProp } from 'recompose';

import Table, { Tr, Td, Th } from 'uikit/Table';
import { Row, Column } from 'uikit/Flex';
import theme from 'theme';
import EntityPageVerticalTable from 'components/EntityPageVerticalTable';
import EntityPageHorizontalTable from 'components/EntityPageHorizontalTable';
import AddToCartButtonSingle from 'components/AddToCartButtonSingle';

let searchInput;

const FilePage = (
  props,
  searchTerm,
  setState,
) => {
  const { node } = props;
  const styles = {
    content: {
      padding: '2rem 2.5rem 13rem',
      width: '80%',
      maxWidth: '1170px',
      alignSelf: 'center',
    },
    table: {
      borderCollapse: 'collapse',
      borderSpacing: 0,
      overflow: 'auto',
    },
  };
  console.log(searchTerm);
  return (
    <Column style={styles.content}>
      <Row style={{ justifyContent: 'space-between' }}>
        <h1
          style={{
            display: 'flex',
            flexDirection: 'row',
          }}
        >
          <FileOIcon style={{ paddingRight: '0.5rem' }} />
          { node.file_id }
        </h1>
        <Column style={{ justifyContent: 'center' }}>
          <AddToCartButtonSingle
            style={{ height: '30px', backgroundColor: theme.primary, color: 'white' }}
            file={node}
            addText="Add to Cart"
            removeText="Remove from Cart"
          />
        </Column>
      </Row>
      <Row style={{ alignItems: 'flex-start' }}>
        <EntityPageVerticalTable
          title="File Properties"
          style={{ width: '58%', marginRight: '2rem' }}
          thToTd={[
            { th: 'Name', td: node.file_name },
            { th: 'Access', td: node.access },
            { th: 'UUID', td: node.file_id },
            { th: 'Submitter ID', td: node.submitter_id || '--' },
            { th: 'Data Format', td: node.data_format },
            { th: 'Size', td: node.file_size },
            { th: 'MD5 Checksum', td: node.md5sum },
            { th: 'State', td: node.state },
            { th: 'Archive', td: 'todo' },
            { th: 'Project ID',
              td: (node.cases || []).map(
                c => (c.project || { project_id: '--' }).project_id).join(', ') },
          ]}
        />
        <EntityPageVerticalTable
          title="Data Information"
          style={{ width: '42%' }}
          thToTd={[
            { th: 'Data Category', td: node.data_category },
            { th: 'Data Type', td: node.data_type },
            { th: 'Experimental Strategy', td: node.experimental_strategy },
            { th: 'Platform', td: node.platform || '--' },
            { th: 'Data Submitter', td: node.center.short_name || '--' },
            { th: 'Tag', td: (node.tags || ['--']).join(', ') },
          ]}
        />
      </Row>
      <Row style={{ paddingTop: '2rem' }}>
        <Column style={{ flexGrow: 1 }}>
          <EntityPageHorizontalTable
            rightComponent={
              <Row>
                <div
                  style={{
                    borderTop: `1px solid ${theme.greyScale5}`,
                    borderLeft: `1px solid ${theme.greyScale5}`,
                    borderBottom: `1px solid ${theme.greyScale5}`,
                    borderRight: 0,
                    borderRadius: '4px 0 0 4px',
                    backgroundColor: `${theme.greyScale4}`,
                    width: '38px',
                    height: '34px',
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                  }}
                >
                  <SearchIcon size={14} />
                </div>
                <input
                  placeholder="Type to filter cases."
                  type="text"
                  ref={node => { searchInput = node; }}
                  onChange={() => setState(() => searchInput.value)}
                  style={{
                    fontSize: '14px',
                    paddingLeft: '1rem',
                    border: `1px solid ${theme.greyScale5}`,
                    width: '28rem',
                    borderRadius: '0 4px 4px 0',
                  }}
                />
              </Row>
            }
            title="Associated Cases/Biospecimen"
            style={{}}
            emptyMessage="No cases or biospecimen found."
            headings={[
              { key: 'entity_id', title: 'Entity Id' },
              { key: 'entity_type', title: 'Entity Type' },
              { key: 'case_id', title: 'Case UUID' },
              { key: 'annotation_count', title: 'Annotations' },
            ]}
            data={node.associated_entities.map(
              ae => ({ ...ae,
                     annotation_count: 'todo',
              })
            )}
          />
        </Column>
      </Row>
      <Row style={{ paddingTop: '2rem' }}>
        <Column style={{ flexGrow: 1 }}>
          <EntityPageHorizontalTable
            title="Meatadata Files"
            emptyMessage="No metadata files found."
            headings={[
              { key: 'file_name', title: 'File Name' },
              { key: 'data_category', title: 'Data Category' },
              { key: 'data_type', title: 'Data Type' },
              { key: 'data_format', title: 'Data Format' },
              { key: 'file_size', title: 'File Size' },
              { key: 'action', title: 'Action' },
            ]}
            data={node.metadata_files.map(md => ({
              ...md,
              action: 'todo',
            }))}
          />
        </Column>
      </Row>
    </Column>
  );
};

FilePage.propTypes = {
  node: PropTypes.object,
};

//const enhance = compose(
//  withState('searchTerm', 'setState', ''),
//  pure
//);

const enhance = compose(
  createContainer({
  fragments: {
    node: () => Relay.QL`
      fragment on File {
        id
        submitter_id
        file_id
        file_name
        file_size
        access
        data_category
        data_format
        data_type
        experimental_strategy
        md5sum
        state
        tags
        center {
          short_name
        }
        annotations {
          annotation_id
        }
        cases {
          project {
            project_id
          }
        }
        associated_entities {
          case_id
          entity_id
          entity_type
        }
        metadata_files {
          file_id
          file_name
          data_category
          data_type
          data_format
          file_size
        }
        platform
      }
    `,
  },
  }),
  flattenProp('node')
);

export default enhance(FilePage);
